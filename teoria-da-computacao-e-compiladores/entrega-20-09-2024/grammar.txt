# tipos primitivos
inteiro
decimal
palavra
booleano
vetor

# declaração de variável
[tipo] [identificador] = [expressão]
inteiro numero = 2

# declaração de vetor
vetor[inteiro] numeros = [1, 2, 3]

# atribuição de variável
[identificador] = [expressão]
numero = 4

# atribuição de valor ao vetor
[identificador][índice] = [expressão]
numeros[0] = 1

# declaração de função				     v opcional
funcao [nome da função]([tipo] [identificador], ...) retorna ([tipo], ...)
	[bloco]
fim

funcao adicionar(inteiro x, inteiro y) retorna (inteiro)
	retorno x + y
fim

# se, se nao (if, else if, else)
se [expressão] faca
	[bloco]
se nao [expressão] faca
	[bloco]
entao
	[bloco]
fim

# while (enquanto)
enquanto [expressão] faca
	[bloco]
fim

# for numérico (para)
para [identificador] = [expressão] ate [expressão] opere [expressão] faca
	[bloco]
fim

para numero = 0 ate numero <= 10 opere numero += 1 faca
	[bloco]
fim

# for para coleções (para)
para chave [identificador] valor [identificador] em [expressão] faca
	[bloco]
fim

para chave i valor k em lista faca
	[bloco]
fim

		# tipos
Palavra-Chave: 	inteiro
		decimal
		palavra
		vetor

		# controle de fluxo
		retorno
		pare

		# inicio de bloco
		faca

		# fim de bloco
		fim
		
		# função
		funcao
		retorna

		# estruturas condicionais
		se
		se nao
		entao

		# for numérico
		para
		ate
		opere

		# for para coleções
		para
		chave
		valor
		em

Operador: 	+
		-
		*
		/
		==
		>=
		<=
		e
		ou

# Constante:	10		inteiro
		3.14		decimal
		"Oi"		palavra
		verdadeiro	booleano
		falso		booleano	